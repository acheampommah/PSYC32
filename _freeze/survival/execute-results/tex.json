{
  "hash": "e3511072bc5db19f529304fb2c43e318",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Survival Analysis\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n## Survival analysis\n\n-   So far, have seen:\n\n    -   response variable counted or measured (regression)\n\n    -   response variable categorized (logistic regression)\n\n-   But what if response is time until event (eg. time of survival after\n    surgery)?\n\n-   Additional complication: event might not have happened at end of\n    study (eg. patient still alive). But knowing that patient has \"not\n    died yet\" presumably informative. Such data called *censored*.\n\n-   Enter *survival analysis*, in particular the \"Cox proportional\n    hazards model\".\n\n-   Explanatory variables in this context often called *covariates*.\n\n## Packages\n\n-   Install packages `survival` and `survminer` if not done.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(survival)\nlibrary(survminer)\nlibrary(broom)\nlibrary(marginaleffects)\n```\n:::\n\n\n\n## Example: still dancing?\n\n-   12 women who have just started taking dancing lessons are followed\n    for up to a year, to see whether they are still taking dancing\n    lessons, or have quit. The \"event\" here is \"quit\".\n\n-   This might depend on:\n\n    -   a treatment (visit to a dance competition)\n\n    -   woman's age (at start of study).\n\n## Data\n\n\\normalsize\n\n```         \nMonths  Quit   Treatment Age\n1        1        0      16\n2        1        0      24\n2        1        0      18\n3        0        0      27\n4        1        0      25\n7        1        1      26\n8        1        1      36\n10       1        1      38\n10       0        1      45\n12       1        1      47\n```\n\n\\normalsize\n\n## About the data\n\n-   `months` and `quit` are kind of combined response:\n\n    -   `Months` is number of months a woman was actually observed\n        dancing\n\n    -   `quit` is 1 if woman quit, 0 if still dancing at end of study.\n\n-   Treatment is 1 if woman went to dance competition, 0 otherwise.\n\n-   Fit model and see whether `Age` or `Treatment` have effect on\n    survival.\n\n-   Want to do predictions for probabilities of still dancing as they\n    depend on whatever is significant, and draw plot.\n\n## Read data\n\n-   Column-aligned:\n\n\\normalsize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"http://ritsokiguess.site/datafiles/dancing.txt\"\ndance <- read_table(url)\n```\n:::\n\n\n\n\\normalsize\n\n## The data\n\n\\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 x 4\n   Months  Quit Treatment   Age\n    <dbl> <dbl>     <dbl> <dbl>\n 1      1     1         0    16\n 2      2     1         0    24\n 3      2     1         0    18\n 4      3     0         0    27\n 5      4     1         0    25\n 6      5     1         0    21\n 7     11     1         0    55\n 8      7     1         1    26\n 9      8     1         1    36\n10     10     1         1    38\n11     10     0         1    45\n12     12     1         1    47\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Examine response and fit model\n\n-   Response variable:\n\n\\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndance %>% mutate(mth = Surv(Months, Quit)) -> dance\ndance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 x 5\n   Months  Quit Treatment   Age    mth\n    <dbl> <dbl>     <dbl> <dbl> <Surv>\n 1      1     1         0    16     1 \n 2      2     1         0    24     2 \n 3      2     1         0    18     2 \n 4      3     0         0    27     3+\n 5      4     1         0    25     4 \n 6      5     1         0    21     5 \n 7     11     1         0    55    11 \n 8      7     1         1    26     7 \n 9      8     1         1    36     8 \n10     10     1         1    38    10 \n11     10     0         1    45    10+\n12     12     1         1    47    12 \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n-   Then fit model, predicting `mth` from explanatories:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndance.1 <- coxph(mth ~ Treatment + Age, data = dance)\n```\n:::\n\n\n\n## Output looks a lot like regression\n\n\\scriptsize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dance.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ncoxph(formula = mth ~ Treatment + Age, data = dance)\n\n  n= 12, number of events= 10 \n\n              coef exp(coef) se(coef)      z Pr(>|z|)  \nTreatment -4.44915   0.01169  2.60929 -1.705   0.0882 .\nAge       -0.36619   0.69337  0.15381 -2.381   0.0173 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n          exp(coef) exp(-coef) lower .95 upper .95\nTreatment   0.01169     85.554 7.026e-05    1.9444\nAge         0.69337      1.442 5.129e-01    0.9373\n\nConcordance= 0.964  (se = 0.039 )\nLikelihood ratio test= 21.68  on 2 df,   p=2e-05\nWald test            = 5.67  on 2 df,   p=0.06\nScore (logrank) test = 14.75  on 2 df,   p=6e-04\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Conclusions\n\n-   Use $\\alpha=0.10$ here since not much data.\n\n-   Three tests at bottom like global F-test. Consensus that something\n    predicts survival time (whether or not dancer quit and how long it\n    took).\n\n-   `Age` (definitely), `Treatment` (marginally) both predict survival\n    time.\n\n## Behind the scenes\n\n-   All depends on *hazard rate*, which is based on probability that\n    event happens in the next short time period, given that event has\n    not happened yet:\n\n-   $X$ denotes time to event, $\\delta$ is small time interval:\n\n-   $h(t) = P(X \\le t + \\delta | X \\ge t) / \\delta$\n\n-   if $h(t)$ large, event likely to happen soon (lifetime short)\n\n-   if $h(t)$ small, event unlikely to happen soon (lifetime long).\n\n## Modelling lifetime\n\n-   want to model hazard rate\n\n-   but hazard rate always positive, so actually model *log* of hazard\n    rate\n\n-   modelling how (log-)hazard rate depends on other things eg $X_1 =$\n    age, $X_2 =$ treatment, with the $\\beta$ being regression\n    coefficients:\n\n-   Cox model $h(t)=h_0(t)\\exp(\\beta_0+\\beta_1X_1+\\beta_2 X_2+\\cdots)$,\n    or:\n\n-   $\\log(h(t)) = \\log(h_0(t)) + \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\cdots$\n\n-   like a generalized linear model with log link.\n\n## Model checking\n\n-   With regression, usually plot residuals against fitted values.\n\n-   Not quite same here (nonlinear model), but \\`\\`martingale\n    residuals'' should have no pattern vs. \"linear predictor\".\n\n-   `ggcoxdiagnostics` from package `survminer` makes plot, to which we\n    add smooth. If smooth trend more or less straight across, model OK.\n\n-   Martingale residuals can go very negative, so won't always look\n    normal.\n\n## Martingale residual plot for dance data\n\nThis looks good (with only 12 points):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoxdiagnostics(dance.1) \n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/bSurvival-7-1.pdf)\n:::\n:::\n\n\n\n## Predicted survival probs\n\n-   The function we use is called `survfit`, though actually works\n    rather like `predict`.\n-   First create a data frame of values to predict from. We'll do all\n    combos of ages 20 and 40, treatment and not, using `datagrid` to get\n    all the combos:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreatments <- c(0, 1)\nages <- c(20, 40)\ndance.new <- datagrid(model = dance.1, Treatment = treatments, Age = ages)\ndance.new\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Age rowid\n1         0  20     1\n2         0  40     2\n3         1  20     3\n4         1  40     4\n```\n\n\n:::\n:::\n\n\n\n## The predictions\n\nOne prediction *for each time* for each combo of age and treatment in\n`dance.new`:\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\\footnotesize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns <- survfit(dance.1, newdata = dance.new, data = dance)\nsummary(s)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: survfit(formula = dance.1, newdata = dance.new, data = dance)\n\n time n.risk n.event survival1 survival2 survival3 survival4\n    1     12       1  8.76e-01  1.00e+00  9.98e-01     1.000\n    2     11       2  3.99e-01  9.99e-01  9.89e-01     1.000\n    4      8       1  1.24e-01  9.99e-01  9.76e-01     1.000\n    5      7       1  2.93e-02  9.98e-01  9.60e-01     1.000\n    7      6       1 2.96e-323  6.13e-01  1.70e-04     0.994\n    8      5       1  0.00e+00  2.99e-06  1.35e-98     0.862\n   10      4       1  0.00e+00  0.00e+00  0.00e+00     0.000\n   11      2       1  0.00e+00  0.00e+00  0.00e+00     0.000\n   12      1       1  0.00e+00  0.00e+00  0.00e+00     0.000\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Conclusions from predicted probs\n\n-   Older women more likely to be still dancing than younger women\n    (compare \"profiles\" for same treatment group).\n\n-   Effect of treatment seems to be to increase prob of still dancing\n    (compare \"profiles\" for same age for treatment group vs. not)\n\n-   Would be nice to see this on a graph. This is `ggsurvplot` from\n    package `survminer`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggsurvplot(s, conf.int = F)\n```\n:::\n\n\n\n## \"Strata\" (groups)\n\n-   uses \"strata\" thus (`dance.new`):\n\n\\footnotesize\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Age rowid\n1         0  20     1\n2         0  40     2\n3         1  20     3\n4         1  40     4\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Plotting survival probabilities\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/survival-plot-1.pdf)\n:::\n:::\n\n\n\n## Discussion\n\n-   Survivor curve farther to the right is better (better chance of\n    surviving longer).\n\n-   Best is age 40 with treatment, worst age 20 without.\n\n-   Appears to be:\n\n    -   age effect (40 better than 20)\n\n    -   treatment effect (treatment better than not)\n\n    -   In analysis, treatment effect only marginally significant.\n\n## A more realistic example: lung cancer\n\n-   When you load in an R package, get data sets to illustrate functions\n    in the package.\n\n-   One such is `lung`. Data set measuring survival in patients with\n    advanced lung cancer.\n\n-   Along with survival time, number of \"performance scores\" included,\n    measuring how well patients can perform daily activities.\n\n-   Sometimes high good, but sometimes bad!\n\n-   Variables below, from the data set help file (`?lung`).\n\n## The variables\n\n![](lung-cancer-data.png)\n\n## Uh oh, missing values\n\n\\scriptsize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlung\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    inst time status age sex ph.ecog ph.karno pat.karno meal.cal wt.loss\n1      3  306      2  74   1       1       90       100     1175      NA\n2      3  455      2  68   1       0       90        90     1225      15\n3      3 1010      1  56   1       0       90        90       NA      15\n4      5  210      2  57   1       1       90        60     1150      11\n5      1  883      2  60   1       0      100        90       NA       0\n6     12 1022      1  74   1       1       50        80      513       0\n7      7  310      2  68   2       2       70        60      384      10\n8     11  361      2  71   2       2       60        80      538       1\n9      1  218      2  53   1       1       70        80      825      16\n10     7  166      2  61   1       2       70        70      271      34\n11     6  170      2  57   1       1       80        80     1025      27\n12    16  654      2  68   2       2       70        70       NA      23\n13    11  728      2  68   2       1       90        90       NA       5\n14    21   71      2  60   1      NA       60        70     1225      32\n15    12  567      2  57   1       1       80        70     2600      60\n16     1  144      2  67   1       1       80        90       NA      15\n17    22  613      2  70   1       1       90       100     1150      -5\n18    16  707      2  63   1       2       50        70     1025      22\n19     1   61      2  56   2       2       60        60      238      10\n20    21   88      2  57   1       1       90        80     1175      NA\n21    11  301      2  67   1       1       80        80     1025      17\n22     6   81      2  49   2       0      100        70     1175      -8\n23    11  624      2  50   1       1       70        80       NA      16\n24    15  371      2  58   1       0       90       100      975      13\n25    12  394      2  72   1       0       90        80       NA       0\n26    12  520      2  70   2       1       90        80      825       6\n27     4  574      2  60   1       0      100       100     1025     -13\n28    13  118      2  70   1       3       60        70     1075      20\n29    13  390      2  53   1       1       80        70      875      -7\n30     1   12      2  74   1       2       70        50      305      20\n31    12  473      2  69   2       1       90        90     1025      -1\n32     1   26      2  73   1       2       60        70      388      20\n33     7  533      2  48   1       2       60        80       NA     -11\n34    16  107      2  60   2       2       50        60      925     -15\n35    12   53      2  61   1       2       70       100     1075      10\n36     1  122      2  62   2       2       50        50     1025      NA\n37    22  814      2  65   1       2       70        60      513      28\n38    15  965      1  66   2       1       70        90      875       4\n39     1   93      2  74   1       2       50        40     1225      24\n40     1  731      2  64   2       1       80       100     1175      15\n41     5  460      2  70   1       1       80        60      975      10\n42    11  153      2  73   2       2       60        70     1075      11\n43    10  433      2  59   2       0       90        90      363      27\n44    12  145      2  60   2       2       70        60       NA      NA\n45     7  583      2  68   1       1       60        70     1025       7\n46     7   95      2  76   2       2       60        60      625     -24\n47     1  303      2  74   1       0       90        70      463      30\n48     3  519      2  63   1       1       80        70     1025      10\n49    13  643      2  74   1       0       90        90     1425       2\n50    22  765      2  50   2       1       90       100     1175       4\n51     3  735      2  72   2       1       90        90       NA       9\n52    12  189      2  63   1       0       80        70       NA       0\n53    21   53      2  68   1       0       90       100     1025       0\n54     1  246      2  58   1       0      100        90     1175       7\n55     6  689      2  59   1       1       90        80     1300      15\n56     1   65      2  62   1       0       90        80      725      NA\n57     5    5      2  65   2       0      100        80      338       5\n58    22  132      2  57   1       2       70        60       NA      18\n59     3  687      2  58   2       1       80        80     1225      10\n60     1  345      2  64   2       1       90        80     1075      -3\n61    22  444      2  75   2       2       70        70      438       8\n62    12  223      2  48   1       1       90        80     1300      68\n63    21  175      2  73   1       1       80       100     1025      NA\n64    11   60      2  65   2       1       90        80     1025       0\n65     3  163      2  69   1       1       80        60     1125       0\n66     3   65      2  68   1       2       70        50      825       8\n67    16  208      2  67   2       2       70        NA      538       2\n68     5  821      1  64   2       0       90        70     1025       3\n69    22  428      2  68   1       0      100        80     1039       0\n70     6  230      2  67   1       1       80       100      488      23\n71    13  840      1  63   1       0       90        90     1175      -1\n72     3  305      2  48   2       1       80        90      538      29\n73     5   11      2  74   1       2       70       100     1175       0\n74     2  132      2  40   1       1       80        80       NA       3\n75    21  226      2  53   2       1       90        80      825       3\n76    12  426      2  71   2       1       90        90     1075      19\n77     1  705      2  51   2       0      100        80     1300       0\n78     6  363      2  56   2       1       80        70     1225      -2\n79     3   11      2  81   1       0       90        NA      731      15\n80     1  176      2  73   1       0       90        70      169      30\n81     4  791      2  59   1       0      100        80      768       5\n82    13   95      2  55   1       1       70        90     1500      15\n83    11  196      1  42   1       1       80        80     1425       8\n84    21  167      2  44   2       1       80        90      588      -1\n85    16  806      1  44   1       1       80        80     1025       1\n86     6  284      2  71   1       1       80        90     1100      14\n87    22  641      2  62   2       1       80        80     1150       1\n88    21  147      2  61   1       0      100        90     1175       4\n89    13  740      1  44   2       1       90        80      588      39\n90     1  163      2  72   1       2       70        70      910       2\n91    11  655      2  63   1       0      100        90      975      -1\n92    22  239      2  70   1       1       80       100       NA      23\n93     5   88      2  66   1       1       90        80      875       8\n94    10  245      2  57   2       1       80        60      280      14\n95     1  588      1  69   2       0      100        90       NA      13\n96    12   30      2  72   1       2       80        60      288       7\n97     3  179      2  69   1       1       80        80       NA      25\n98    12  310      2  71   1       1       90       100       NA       0\n99    11  477      2  64   1       1       90       100      910       0\n100    3  166      2  70   2       0       90        70       NA      10\n101    1  559      1  58   2       0      100       100      710      15\n102    6  450      2  69   2       1       80        90     1175       3\n103   13  364      2  56   1       1       70        80       NA       4\n104    6  107      2  63   1       1       90        70       NA       0\n105   13  177      2  59   1       2       50        NA       NA      32\n106   12  156      2  66   1       1       80        90      875      14\n107   26  529      1  54   2       1       80       100      975      -3\n108    1   11      2  67   1       1       90        90      925      NA\n109   21  429      2  55   1       1      100        80      975       5\n110    3  351      2  75   2       2       60        50      925      11\n111   13   15      2  69   1       0       90        70      575      10\n112    1  181      2  44   1       1       80        90     1175       5\n113   10  283      2  80   1       1       80       100     1030       6\n114    3  201      2  75   2       0       90       100       NA       1\n115    6  524      2  54   2       1       80       100       NA      15\n116    1   13      2  76   1       2       70        70      413      20\n117    3  212      2  49   1       2       70        60      675      20\n118    1  524      2  68   1       2       60        70     1300      30\n119   16  288      2  66   1       2       70        60      613      24\n120   15  363      2  80   1       1       80        90      346      11\n121   22  442      2  75   1       0       90        90       NA       0\n122   26  199      2  60   2       2       70        80      675      10\n123    3  550      2  69   2       1       70        80      910       0\n124   11   54      2  72   1       2       60        60      768      -3\n125    1  558      2  70   1       0       90        90     1025      17\n126   22  207      2  66   1       1       80        80      925      20\n127    7   92      2  50   1       1       80        60     1075      13\n128   12   60      2  64   1       1       80        90      993       0\n129   16  551      1  77   2       2       80        60      750      28\n130   12  543      1  48   2       0       90        60       NA       4\n131    4  293      2  59   2       1       80        80      925      52\n132   16  202      2  53   1       1       80        80       NA      20\n133    6  353      2  47   1       0      100        90     1225       5\n134   13  511      1  55   2       1       80        70       NA      49\n135    1  267      2  67   1       0       90        70      313       6\n136   22  511      1  74   2       2       60        40       96      37\n137   12  371      2  58   2       1       80        70       NA       0\n138   13  387      2  56   1       2       80        60     1075      NA\n139    1  457      2  54   1       1       90        90      975      -5\n140    5  337      2  56   1       0      100       100     1500      15\n141   21  201      2  73   2       2       70        60     1225     -16\n142    3  404      1  74   1       1       80        70      413      38\n143   26  222      2  76   1       2       70        70     1500       8\n144    1   62      2  65   2       1       80        90     1075       0\n145   11  458      1  57   1       1       80       100      513      30\n146   26  356      1  53   2       1       90        90       NA       2\n147   16  353      2  71   1       0      100        80      775       2\n148   16  163      2  54   1       1       90        80     1225      13\n149   12   31      2  82   1       0      100        90      413      27\n150   13  340      2  59   2       0      100        90       NA       0\n151   13  229      2  70   1       1       70        60     1175      -2\n152   22  444      1  60   1       0       90       100       NA       7\n153    5  315      1  62   2       0       90        90       NA       0\n154   16  182      2  53   2       1       80        60       NA       4\n155   32  156      2  55   1       2       70        30     1025      10\n156   NA  329      2  69   1       2       70        80      713      20\n157   26  364      1  68   2       1       90        90       NA       7\n158    4  291      2  62   1       2       70        60      475      27\n159   12  179      2  63   1       1       80        70      538      -2\n160    1  376      1  56   2       1       80        90      825      17\n161   32  384      1  62   2       0       90        90      588       8\n162   10  268      2  44   2       1       90       100     2450       2\n163   11  292      1  69   1       2       60        70     2450      36\n164    6  142      2  63   1       1       90        80      875       2\n165    7  413      1  64   1       1       80        70      413      16\n166   16  266      1  57   2       0       90        90     1075       3\n167   11  194      2  60   2       1       80        60       NA      33\n168   21  320      2  46   1       0      100       100      860       4\n169    6  181      2  61   1       1       90        90      730       0\n170   12  285      2  65   1       0      100        90     1025       0\n171   13  301      1  61   1       1       90       100      825       2\n172    2  348      2  58   2       0       90        80     1225      10\n173    2  197      2  56   1       1       90        60      768      37\n174   16  382      1  43   2       0      100        90      338       6\n175    1  303      1  53   1       1       90        80     1225      12\n176   13  296      1  59   2       1       80       100     1025       0\n177    1  180      2  56   1       2       60        80     1225      -2\n178   13  186      2  55   2       1       80        70       NA      NA\n179    1  145      2  53   2       1       80        90      588      13\n180    7  269      1  74   2       0      100       100      588       0\n181   13  300      1  60   1       0      100       100      975       5\n182    1  284      1  39   1       0      100        90     1225      -5\n183   16  350      2  66   2       0       90       100     1025      NA\n184   32  272      1  65   2       1       80        90       NA      -1\n185   12  292      1  51   2       0       90        80     1225       0\n186   12  332      1  45   2       0       90       100      975       5\n187    2  285      2  72   2       2       70        90      463      20\n188    3  259      1  58   1       0       90        80     1300       8\n189   15  110      2  64   1       1       80        60     1025      12\n190   22  286      2  53   1       0       90        90     1225       8\n191   16  270      2  72   1       1       80        90      488      14\n192   16   81      2  52   1       2       60        70     1075      NA\n193   12  131      2  50   1       1       90        80      513      NA\n194    1  225      1  64   1       1       90        80      825      33\n195   22  269      2  71   1       1       90        90     1300      -2\n196   12  225      1  70   1       0      100       100     1175       6\n197   32  243      1  63   2       1       80        90      825       0\n198   21  279      1  64   1       1       90        90       NA       4\n199    1  276      1  52   2       0      100        80      975       0\n200   32  135      2  60   1       1       90        70     1275       0\n201   15   79      2  64   2       1       90        90      488      37\n202   22   59      2  73   1       1       60        60     2200       5\n203   32  240      1  63   2       0       90       100     1025       0\n204    3  202      1  50   2       0      100       100      635       1\n205   26  235      1  63   2       0      100        90      413       0\n206   33  105      2  62   1       2       NA        70       NA      NA\n207    5  224      1  55   2       0       80        90       NA      23\n208   13  239      2  50   2       2       60        60     1025      -3\n209   21  237      1  69   1       1       80        70       NA      NA\n210   33  173      1  59   2       1       90        80       NA      10\n211    1  252      1  60   2       0      100        90      488      -2\n212    6  221      1  67   1       1       80        70      413      23\n213   15  185      1  69   1       1       90        70     1075       0\n214   11   92      1  64   2       2       70       100       NA      31\n215   11   13      2  65   1       1       80        90       NA      10\n216   11  222      1  65   1       1       90        70     1025      18\n217   13  192      1  41   2       1       90        80       NA     -10\n218   21  183      2  76   1       2       80        60      825       7\n219   11  211      1  70   2       2       70        30      131       3\n220    2  175      1  57   2       0       80        80      725      11\n221   22  197      1  67   1       1       80        90     1500       2\n222   11  203      1  71   2       1       80        90     1025       0\n223    1  116      2  76   1       1       80        80       NA       0\n224    1  188      1  77   1       1       80        60       NA       3\n225   13  191      1  39   1       0       90        90     2350      -5\n226   32  105      1  75   2       2       60        70     1025       5\n227    6  174      1  66   1       1       90       100     1075       1\n228   22  177      1  58   2       1       80        90     1060       0\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## A closer look\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\\tiny\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lung)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      inst            time            status           age       \n Min.   : 1.00   Min.   :   5.0   Min.   :1.000   Min.   :39.00  \n 1st Qu.: 3.00   1st Qu.: 166.8   1st Qu.:1.000   1st Qu.:56.00  \n Median :11.00   Median : 255.5   Median :2.000   Median :63.00  \n Mean   :11.09   Mean   : 305.2   Mean   :1.724   Mean   :62.45  \n 3rd Qu.:16.00   3rd Qu.: 396.5   3rd Qu.:2.000   3rd Qu.:69.00  \n Max.   :33.00   Max.   :1022.0   Max.   :2.000   Max.   :82.00  \n NA's   :1                                                       \n      sex           ph.ecog          ph.karno        pat.karno     \n Min.   :1.000   Min.   :0.0000   Min.   : 50.00   Min.   : 30.00  \n 1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 75.00   1st Qu.: 70.00  \n Median :1.000   Median :1.0000   Median : 80.00   Median : 80.00  \n Mean   :1.395   Mean   :0.9515   Mean   : 81.94   Mean   : 79.96  \n 3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 90.00   3rd Qu.: 90.00  \n Max.   :2.000   Max.   :3.0000   Max.   :100.00   Max.   :100.00  \n                 NA's   :1        NA's   :1        NA's   :3       \n    meal.cal         wt.loss       \n Min.   :  96.0   Min.   :-24.000  \n 1st Qu.: 635.0   1st Qu.:  0.000  \n Median : 975.0   Median :  7.000  \n Mean   : 928.8   Mean   :  9.832  \n 3rd Qu.:1150.0   3rd Qu.: 15.750  \n Max.   :2600.0   Max.   : 68.000  \n NA's   :47       NA's   :14       \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Remove obs with *any* missing values\n\n\\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlung %>% drop_na() -> lung.complete\nlung.complete %>%\n  select(meal.cal:wt.loss) %>%\n  slice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   meal.cal wt.loss\n2      1225      15\n4      1150      11\n6       513       0\n7       384      10\n8       538       1\n9       825      16\n10      271      34\n11     1025      27\n15     2600      60\n17     1150      -5\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\nMissing values seem to be gone.\n\n## Check!\n\n\\tiny\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lung.complete)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      inst            time            status           age       \n Min.   : 1.00   Min.   :   5.0   Min.   :1.000   Min.   :39.00  \n 1st Qu.: 3.00   1st Qu.: 174.5   1st Qu.:1.000   1st Qu.:57.00  \n Median :11.00   Median : 268.0   Median :2.000   Median :64.00  \n Mean   :10.71   Mean   : 309.9   Mean   :1.719   Mean   :62.57  \n 3rd Qu.:15.00   3rd Qu.: 419.5   3rd Qu.:2.000   3rd Qu.:70.00  \n Max.   :32.00   Max.   :1022.0   Max.   :2.000   Max.   :82.00  \n      sex           ph.ecog          ph.karno        pat.karno     \n Min.   :1.000   Min.   :0.0000   Min.   : 50.00   Min.   : 30.00  \n 1st Qu.:1.000   1st Qu.:0.0000   1st Qu.: 70.00   1st Qu.: 70.00  \n Median :1.000   Median :1.0000   Median : 80.00   Median : 80.00  \n Mean   :1.383   Mean   :0.9581   Mean   : 82.04   Mean   : 79.58  \n 3rd Qu.:2.000   3rd Qu.:1.0000   3rd Qu.: 90.00   3rd Qu.: 90.00  \n Max.   :2.000   Max.   :3.0000   Max.   :100.00   Max.   :100.00  \n    meal.cal         wt.loss       \n Min.   :  96.0   Min.   :-24.000  \n 1st Qu.: 619.0   1st Qu.:  0.000  \n Median : 975.0   Median :  7.000  \n Mean   : 929.1   Mean   :  9.719  \n 3rd Qu.:1162.5   3rd Qu.: 15.000  \n Max.   :2600.0   Max.   : 68.000  \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\nNo missing values left.\n\n## Model 1: use everything except `inst`\n\n\\footnotesize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(lung.complete)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"inst\"      \"time\"      \"status\"    \"age\"       \"sex\"      \n [6] \"ph.ecog\"   \"ph.karno\"  \"pat.karno\" \"meal.cal\"  \"wt.loss\"  \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n-   Event was death, goes with `status` of 2:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlung.complete %>% \n   mutate(resp = Surv(time, status == 2)) ->\n   lung.complete\nlung.1 <- coxph(resp ~ . - inst - time - status,\n  data = lung.complete\n)\n```\n:::\n\n\n\n\"Dot\" means \"all the other variables\".\n\n## `summary` of model 1\n\n\\tiny\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lung.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ncoxph(formula = resp ~ . - inst - time - status, data = lung.complete)\n\n  n= 167, number of events= 120 \n\n                coef  exp(coef)   se(coef)      z Pr(>|z|)   \nage        1.080e-02  1.011e+00  1.160e-02  0.931  0.35168   \nsex       -5.536e-01  5.749e-01  2.016e-01 -2.746  0.00603 **\nph.ecog    7.395e-01  2.095e+00  2.250e-01  3.287  0.00101 **\nph.karno   2.244e-02  1.023e+00  1.123e-02  1.998  0.04575 * \npat.karno -1.207e-02  9.880e-01  8.116e-03 -1.488  0.13685   \nmeal.cal   2.835e-05  1.000e+00  2.594e-04  0.109  0.91298   \nwt.loss   -1.420e-02  9.859e-01  7.766e-03 -1.828  0.06748 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n          exp(coef) exp(-coef) lower .95 upper .95\nage          1.0109     0.9893    0.9881    1.0341\nsex          0.5749     1.7395    0.3872    0.8534\nph.ecog      2.0950     0.4773    1.3479    3.2560\nph.karno     1.0227     0.9778    1.0004    1.0455\npat.karno    0.9880     1.0121    0.9724    1.0038\nmeal.cal     1.0000     1.0000    0.9995    1.0005\nwt.loss      0.9859     1.0143    0.9710    1.0010\n\nConcordance= 0.653  (se = 0.029 )\nLikelihood ratio test= 28.16  on 7 df,   p=2e-04\nWald test            = 27.5  on 7 df,   p=3e-04\nScore (logrank) test = 28.31  on 7 df,   p=2e-04\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Overall significance\n\nThe three tests of overall significance: \\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(lung.1) %>% select(starts_with(\"p.value\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 4\n  p.value.log p.value.sc p.value.wald p.value.robust\n        <dbl>      <dbl>        <dbl>          <dbl>\n1    0.000205   0.000193     0.000271             NA\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\nAll strongly significant. *Something* predicts survival.\n\n## Coefficients for model 1\n\n\\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(lung.1) %>% select(term, p.value) %>% arrange(p.value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 x 2\n  term      p.value\n  <chr>       <dbl>\n1 ph.ecog   0.00101\n2 sex       0.00603\n3 ph.karno  0.0457 \n4 wt.loss   0.0675 \n5 pat.karno 0.137  \n6 age       0.352  \n7 meal.cal  0.913  \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n-   `sex` and `ph.ecog` definitely significant here\n\n-   `age`, `pat.karno` and `meal.cal` definitely not\n\n-   Take out definitely non-sig variables, and try again.\n\n## Model 2\n\n\\normalsize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlung.2 <- update(lung.1, . ~ . - age - pat.karno - meal.cal)\ntidy(lung.2) %>% select(term, p.value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 x 2\n  term      p.value\n  <chr>       <dbl>\n1 sex      0.00409 \n2 ph.ecog  0.000112\n3 ph.karno 0.101   \n4 wt.loss  0.108   \n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Compare with first model:\n\n\\normalsize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(lung.2, lung.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table\n Cox model: response is  resp\n Model 1: ~ sex + ph.ecog + ph.karno + wt.loss\n Model 2: ~ (inst + time + status + age + sex + ph.ecog + ph.karno + pat.karno + meal.cal + wt.loss) - inst - time - status\n   loglik Chisq Df Pr(>|Chi|)\n1 -495.67                    \n2 -494.03 3.269  3      0.352\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n-   No harm in taking out those variables.\n\n## Model 3\n\nTake out `ph.karno` and `wt.loss` as well.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlung.3 <- update(lung.2, . ~ . - ph.karno - wt.loss)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(lung.3) %>% select(term, estimate, p.value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 3\n  term    estimate  p.value\n  <chr>      <dbl>    <dbl>\n1 sex       -0.510 0.00958 \n2 ph.ecog    0.483 0.000266\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lung.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ncoxph(formula = resp ~ sex + ph.ecog, data = lung.complete)\n\n  n= 167, number of events= 120 \n\n           coef exp(coef) se(coef)      z Pr(>|z|)    \nsex     -0.5101    0.6004   0.1969 -2.591 0.009579 ** \nph.ecog  0.4825    1.6201   0.1323  3.647 0.000266 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nsex        0.6004     1.6655    0.4082    0.8832\nph.ecog    1.6201     0.6172    1.2501    2.0998\n\nConcordance= 0.641  (se = 0.031 )\nLikelihood ratio test= 19.48  on 2 df,   p=6e-05\nWald test            = 19.35  on 2 df,   p=6e-05\nScore (logrank) test = 19.62  on 2 df,   p=5e-05\n```\n\n\n:::\n:::\n\n\n\n## Check whether that was OK\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(lung.3, lung.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table\n Cox model: response is  resp\n Model 1: ~ sex + ph.ecog\n Model 2: ~ sex + ph.ecog + ph.karno + wt.loss\n   loglik  Chisq Df Pr(>|Chi|)  \n1 -498.38                       \n2 -495.67 5.4135  2    0.06675 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n*Just* OK.\n\n## Commentary\n\n-   OK (just) to take out those two covariates.\n\n-   Both remaining variables strongly significant.\n\n-   Nature of effect on survival time? Consider later.\n\n-   Picture?\n\n## Plotting survival probabilities\n\n-   Create new data frame of values to predict for, then predict:\n\n\\footnotesize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsexes <- c(1, 2)\nph.ecogs <- 0:3\nlung.new <- datagrid(sex = sexes, ph.ecog = ph.ecogs, model = lung.3)\nlung.new\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sex ph.ecog rowid\n1   1       0     1\n2   1       1     2\n3   1       2     3\n4   1       3     4\n5   2       0     5\n6   2       1     6\n7   2       2     7\n8   2       3     8\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Making the plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns <- survfit(lung.3, newdata = lung.new, data = lung)\nsummary(s)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: survfit(formula = lung.3, newdata = lung.new, data = lung)\n\n time n.risk n.event survival1 survival2 survival3 survival4\n    5    167       1     0.996    0.9932   0.98908  0.982370\n   11    166       1     0.992    0.9865   0.97825  0.965007\n   12    165       1     0.987    0.9798   0.96743  0.947763\n   13    164       1     0.983    0.9730   0.95660  0.930639\n   15    163       1     0.979    0.9662   0.94577  0.913634\n   26    162       1     0.975    0.9594   0.93502  0.896868\n   30    161       1     0.970    0.9526   0.92427  0.880221\n   31    160       1     0.966    0.9457   0.91352  0.863694\n   53    159       2     0.957    0.9320   0.89222  0.831293\n   54    157       1     0.953    0.9252   0.88162  0.815359\n   59    156       1     0.949    0.9183   0.87103  0.799544\n   60    155       2     0.940    0.9046   0.85000  0.768509\n   61    153       1     0.936    0.8977   0.83959  0.753310\n   62    152       1     0.931    0.8908   0.82922  0.738301\n   65    151       1     0.927    0.8840   0.81894  0.723524\n   79    150       1     0.922    0.8771   0.80865  0.708862\n   81    149       1     0.918    0.8703   0.79845  0.694431\n   88    148       1     0.913    0.8635   0.78835  0.680252\n   92    147       1     0.909    0.8567   0.77830  0.666254\n   93    146       1     0.904    0.8499   0.76829  0.652435\n   95    145       2     0.895    0.8362   0.74834  0.625202\n  107    142       1     0.891    0.8293   0.73836  0.611749\n  110    141       1     0.886    0.8224   0.72843  0.598481\n  118    140       1     0.882    0.8155   0.71856  0.585392\n  135    139       1     0.877    0.8085   0.70860  0.572303\n  142    138       1     0.872    0.8015   0.69869  0.559396\n  145    137       1     0.868    0.7945   0.68884  0.546672\n  147    136       1     0.863    0.7875   0.67907  0.534172\n  153    135       1     0.858    0.7806   0.66940  0.521891\n  156    134       2     0.849    0.7667   0.65018  0.497831\n  163    132       3     0.834    0.7457   0.62158  0.462841\n  166    129       1     0.829    0.7386   0.61212  0.451483\n  167    128       1     0.825    0.7316   0.60266  0.440233\n  170    127       1     0.820    0.7245   0.59329  0.429201\n  176    124       1     0.815    0.7174   0.58386  0.418196\n  179    122       1     0.810    0.7102   0.57446  0.407344\n  180    121       1     0.805    0.7031   0.56512  0.396669\n  181    120       2     0.794    0.6887   0.54650  0.375711\n  183    118       1     0.789    0.6815   0.53728  0.365495\n  197    114       1     0.784    0.6741   0.52779  0.355101\n  199    112       1     0.778    0.6665   0.51827  0.344779\n  201    111       1     0.773    0.6590   0.50882  0.334648\n  207    108       1     0.768    0.6514   0.49933  0.324595\n  210    107       1     0.762    0.6438   0.48991  0.314732\n  212    105       1     0.756    0.6361   0.48045  0.304945\n  218    104       1     0.751    0.6283   0.47099  0.295276\n  222    102       1     0.745    0.6205   0.46148  0.285683\n  223    100       1     0.739    0.6124   0.45186  0.276090\n  226     97       1     0.733    0.6042   0.44210  0.266498\n  229     96       1     0.727    0.5961   0.43248  0.257165\n  230     95       1     0.720    0.5879   0.42294  0.248038\n  239     93       1     0.714    0.5797   0.41343  0.239068\n  245     90       1     0.708    0.5714   0.40388  0.230184\n  246     89       1     0.702    0.5632   0.39447  0.221557\n  267     85       1     0.695    0.5548   0.38501  0.213013\n  268     84       1     0.689    0.5465   0.37569  0.204723\n  269     83       1     0.682    0.5382   0.36652  0.196684\n  270     81       1     0.676    0.5299   0.35738  0.188799\n  283     79       1     0.669    0.5215   0.34827  0.181068\n  284     78       1     0.662    0.5131   0.33926  0.173537\n  285     76       2     0.649    0.4962   0.32136  0.158944\n  286     74       1     0.642    0.4878   0.31259  0.151979\n  288     73       1     0.635    0.4795   0.30397  0.145249\n  291     72       1     0.628    0.4711   0.29536  0.138637\n  293     69       1     0.621    0.4622   0.28642  0.131905\n  301     66       1     0.614    0.4532   0.27745  0.125276\n  303     64       1     0.606    0.4441   0.26841  0.118730\n  305     62       1     0.598    0.4348   0.25937  0.112320\n  310     61       1     0.590    0.4256   0.25052  0.106180\n  320     60       1     0.582    0.4163   0.24180  0.100256\n  337     58       1     0.574    0.4071   0.23320  0.094542\n  345     57       1     0.566    0.3980   0.22479  0.089081\n  348     56       1     0.558    0.3890   0.21657  0.083866\n  351     55       1     0.550    0.3801   0.20859  0.078916\n  353     54       2     0.534    0.3623   0.19306  0.069614\n  361     52       1     0.526    0.3536   0.18556  0.065290\n  363     51       2     0.510    0.3362   0.17097  0.057176\n  371     49       1     0.502    0.3275   0.16390  0.053395\n  390     45       1     0.494    0.3186   0.15677  0.049681\n  426     42       1     0.485    0.3092   0.14934  0.045926\n  428     41       1     0.476    0.2999   0.14215  0.042394\n  429     40       1     0.467    0.2908   0.13517  0.039074\n  433     39       1     0.457    0.2816   0.12833  0.035920\n  444     38       1     0.448    0.2726   0.12175  0.032987\n  450     37       1     0.439    0.2636   0.11532  0.030210\n  455     36       1     0.430    0.2548   0.10910  0.027616\n  457     35       1     0.421    0.2460   0.10310  0.025196\n  460     33       1     0.411    0.2369   0.09701  0.022831\n  473     32       1     0.401    0.2279   0.09107  0.020608\n  477     31       1     0.392    0.2190   0.08536  0.018556\n  519     29       1     0.381    0.2097   0.07957  0.016559\n  520     28       1     0.371    0.2004   0.07393  0.014701\n  524     27       1     0.360    0.1912   0.06855  0.013008\n  550     25       1     0.349    0.1815   0.06302  0.011348\n  558     23       1     0.337    0.1716   0.05749  0.009781\n  567     21       1     0.325    0.1616   0.05217  0.008356\n  574     20       1     0.312    0.1516   0.04704  0.007067\n  583     19       1     0.300    0.1418   0.04224  0.005936\n  613     18       1     0.287    0.1321   0.03764  0.004925\n  641     17       1     0.273    0.1223   0.03325  0.004028\n  643     16       1     0.260    0.1129   0.02919  0.003262\n  655     15       1     0.247    0.1038   0.02546  0.002613\n  687     14       1     0.234    0.0949   0.02203  0.002068\n  689     13       1     0.221    0.0864   0.01892  0.001615\n  705     12       1     0.207    0.0778   0.01598  0.001229\n  707     11       1     0.193    0.0699   0.01341  0.000926\n  731     10       1     0.178    0.0613   0.01085  0.000656\n  765      8       1     0.162    0.0525   0.00843  0.000436\n  791      7       1     0.146    0.0442   0.00638  0.000278\n  814      5       1     0.126    0.0348   0.00434  0.000149\n survival5 survival6 survival7 survival8\n     0.997     0.996    0.9934   0.98938\n     0.995     0.992    0.9869   0.97884\n     0.992     0.988    0.9803   0.96830\n     0.990     0.984    0.9737   0.95776\n     0.987     0.980    0.9671   0.94721\n     0.985     0.975    0.9605   0.93673\n     0.982     0.971    0.9538   0.92626\n     0.980     0.967    0.9471   0.91577\n     0.974     0.959    0.9338   0.89499\n     0.972     0.954    0.9271   0.88465\n     0.969     0.950    0.9204   0.87431\n     0.964     0.942    0.9070   0.85377\n     0.961     0.937    0.9003   0.84359\n     0.958     0.933    0.8936   0.83346\n     0.955     0.929    0.8870   0.82340\n     0.953     0.924    0.8803   0.81334\n     0.950     0.920    0.8736   0.80336\n     0.947     0.916    0.8669   0.79347\n     0.944     0.911    0.8603   0.78362\n     0.941     0.907    0.8536   0.77382\n     0.936     0.898    0.8402   0.75426\n     0.933     0.894    0.8335   0.74448\n     0.930     0.889    0.8267   0.73474\n     0.927     0.885    0.8200   0.72505\n     0.924     0.880    0.8132   0.71527\n     0.921     0.876    0.8063   0.70554\n     0.918     0.871    0.7995   0.69586\n     0.915     0.866    0.7926   0.68626\n     0.912     0.862    0.7858   0.67674\n     0.906     0.853    0.7722   0.65784\n     0.897     0.838    0.7516   0.62967\n     0.894     0.834    0.7447   0.62035\n     0.891     0.829    0.7378   0.61102\n     0.887     0.824    0.7309   0.60178\n     0.884     0.819    0.7239   0.59247\n     0.881     0.814    0.7169   0.58319\n     0.878     0.809    0.7099   0.57396\n     0.871     0.799    0.6957   0.55556\n     0.868     0.794    0.6887   0.54644\n     0.864     0.789    0.6813   0.53705\n     0.860     0.784    0.6739   0.52762\n     0.857     0.778    0.6665   0.51826\n     0.853     0.773    0.6590   0.50885\n     0.849     0.768    0.6515   0.49951\n     0.846     0.762    0.6439   0.49013\n     0.842     0.757    0.6363   0.48074\n     0.838     0.751    0.6286   0.47130\n     0.834     0.745    0.6207   0.46173\n     0.830     0.739    0.6126   0.45203\n     0.826     0.733    0.6045   0.44246\n     0.821     0.727    0.5965   0.43296\n     0.817     0.721    0.5884   0.42349\n     0.813     0.715    0.5802   0.41397\n     0.808     0.708    0.5720   0.40458\n     0.804     0.702    0.5638   0.39514\n     0.799     0.696    0.5555   0.38583\n     0.795     0.689    0.5474   0.37666\n     0.790     0.683    0.5391   0.36752\n     0.786     0.676    0.5308   0.35841\n     0.781     0.670    0.5225   0.34938\n     0.771     0.657    0.5058   0.33143\n     0.766     0.650    0.4975   0.32264\n     0.762     0.643    0.4892   0.31398\n     0.757     0.636    0.4808   0.30532\n     0.751     0.629    0.4720   0.29633\n     0.746     0.622    0.4631   0.28729\n     0.740     0.614    0.4540   0.27818\n     0.734     0.606    0.4447   0.26907\n     0.729     0.599    0.4356   0.26014\n     0.723     0.591    0.4264   0.25132\n     0.717     0.583    0.4172   0.24262\n     0.711     0.575    0.4081   0.23411\n     0.705     0.567    0.3991   0.22578\n     0.699     0.559    0.3902   0.21768\n     0.686     0.544    0.3725   0.20189\n     0.680     0.536    0.3637   0.19426\n     0.668     0.520    0.3463   0.17939\n     0.661     0.512    0.3376   0.17217\n     0.655     0.503    0.3287   0.16487\n     0.647     0.494    0.3193   0.15727\n     0.640     0.485    0.3099   0.14989\n     0.633     0.476    0.3007   0.14273\n     0.625     0.467    0.2915   0.13570\n     0.618     0.458    0.2824   0.12893\n     0.610     0.449    0.2734   0.12230\n     0.602     0.440    0.2644   0.11588\n     0.595     0.431    0.2556   0.10967\n     0.586     0.421    0.2464   0.10337\n     0.578     0.411    0.2372   0.09720\n     0.570     0.402    0.2282   0.09127\n     0.560     0.391    0.2188   0.08524\n     0.551     0.381    0.2093   0.07936\n     0.542     0.370    0.2000   0.07374\n     0.531     0.359    0.1902   0.06794\n     0.520     0.347    0.1800   0.06214\n     0.509     0.335    0.1698   0.05653\n     0.497     0.322    0.1596   0.05112\n     0.485     0.310    0.1496   0.04604\n     0.472     0.297    0.1396   0.04116\n     0.459     0.283    0.1295   0.03647\n     0.446     0.270    0.1198   0.03214\n     0.432     0.257    0.1104   0.02813\n     0.418     0.243    0.1012   0.02444\n     0.403     0.230    0.0923   0.02107\n     0.388     0.216    0.0834   0.01789\n     0.373     0.202    0.0751   0.01508\n     0.355     0.187    0.0661   0.01227\n     0.335     0.170    0.0568   0.00960\n     0.315     0.154    0.0481   0.00732\n     0.288     0.133    0.0382   0.00504\n```\n\n\n:::\n\n```{.r .cell-code}\ng <- ggsurvplot(s, conf.int = F)\n```\n:::\n\n\n\n## The plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/bSurvival-30-1.pdf)\n:::\n:::\n\n\n\n## Discussion of survival curves\n\n-   Best survival is teal-blue curve, stratum 5, females with `ph.ecog`\n    score 0.\n\n-   Next best: blue, stratum 6, females with score 1, and red, stratum\n    1, males score 0.\n\n-   Worst: green, stratum 4, males score 3.\n\n-   For any given `ph.ecog` score, females have better predicted\n    survival than males.\n\n-   For both genders, a lower score associated with better survival.\n\n## The coefficients in model 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(lung.3) %>% select(term, estimate, p.value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 3\n  term    estimate  p.value\n  <chr>      <dbl>    <dbl>\n1 sex       -0.510 0.00958 \n2 ph.ecog    0.483 0.000266\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lung.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ncoxph(formula = resp ~ sex + ph.ecog, data = lung.complete)\n\n  n= 167, number of events= 120 \n\n           coef exp(coef) se(coef)      z Pr(>|z|)    \nsex     -0.5101    0.6004   0.1969 -2.591 0.009579 ** \nph.ecog  0.4825    1.6201   0.1323  3.647 0.000266 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nsex        0.6004     1.6655    0.4082    0.8832\nph.ecog    1.6201     0.6172    1.2501    2.0998\n\nConcordance= 0.641  (se = 0.031 )\nLikelihood ratio test= 19.48  on 2 df,   p=6e-05\nWald test            = 19.35  on 2 df,   p=6e-05\nScore (logrank) test = 19.62  on 2 df,   p=5e-05\n```\n\n\n:::\n:::\n\n\n\n-   `sex` coeff negative, so being higher `sex` value (female) goes with\n    *less* hazard of dying.\n\n-   `ph.ecog` coeff positive, so higher `ph.ecog` score goes with *more*\n    hazard of dying\n\n-   Two coeffs about same size, so being male rather than female\n    corresponds to 1-point increase in `ph.ecog` score. Note how\n    survival curves come in 3 pairs plus 2 odd.\n\n## Martingale residuals for this model\n\nNo problems here:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoxdiagnostics(lung.3) + geom_smooth(se = F)\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/bSurvival-32-1.pdf)\n:::\n:::\n\n\n\n## When the Cox model fails\n\n-   Invent some data where survival is best at middling age, and worse\n    at high *and* low age:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage <- seq(20, 60, 5)\nsurvtime <- c(10, 12, 11, 21, 15, 20, 8, 9, 11)\nstat <- c(1, 1, 1, 1, 0, 1, 1, 1, 1)\nd <- tibble(age, survtime, stat)\nd %>% mutate(y = Surv(survtime, stat)) -> d\n```\n:::\n\n\n\n-   Small survival time 15 in middle was actually censored, so would\n    have been longer if observed.\n\n## Fit Cox model\n\n\\footnotesize\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny.1 <- coxph(y ~ age, data = d)\nsummary(y.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\ncoxph(formula = y ~ age, data = d)\n\n  n= 9, number of events= 8 \n\n       coef exp(coef) se(coef)     z Pr(>|z|)\nage 0.01984   1.02003  0.03446 0.576    0.565\n\n    exp(coef) exp(-coef) lower .95 upper .95\nage      1.02     0.9804    0.9534     1.091\n\nConcordance= 0.545  (se = 0.105 )\nLikelihood ratio test= 0.33  on 1 df,   p=0.6\nWald test            = 0.33  on 1 df,   p=0.6\nScore (logrank) test = 0.33  on 1 df,   p=0.6\n```\n\n\n:::\n:::\n\n\n\n\\normalsize\n\n## Martingale residuals\n\nDown-and-up indicates incorrect relationship between age and survival:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoxdiagnostics(y.1) + geom_smooth(se = F)\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/bSurvival-35-1.pdf)\n:::\n:::\n\n\n\n## Attempt 2\n\nAdd squared term in age:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny.2 <- coxph(y ~ age + I(age^2), data = d)\ntidy(y.2) %>% select(term, estimate, p.value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 x 3\n  term     estimate p.value\n  <chr>       <dbl>   <dbl>\n1 age      -0.380    0.116 \n2 I(age^2)  0.00483  0.0977\n```\n\n\n:::\n:::\n\n\n\n-   (Marginally) helpful.\n\n## Martingale residuals this time\n\nNot great, but less problematic than before:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoxdiagnostics(y.2) + geom_smooth(se = F)\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-beamer/bSurvival-37-1.pdf)\n:::\n:::\n",
    "supporting": [
      "survival_files/figure-beamer"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}