{
  "hash": "f395110d53ed2d021fe9bff66dc3af04",
  "result": {
    "markdown": "---\ntitle: \"Drawing graphs\"\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n## Our data\n\n-   To illustrate making graphs, we need some data.\n-   Data on 202 male and female athletes at the Australian Institute of\n    Sport.\n-   Variables:\n    -   categorical: Sex of athlete, sport they play\n    -   quantitative: height (cm), weight (kg), lean body mass, red and\n        white blood cell counts, haematocrit and haemoglobin (blood),\n        ferritin concentration, body mass index, percent body fat.\n-   Values separated by tabs (which impacts reading in).\n\n## Packages for this section\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Reading data into R\n\n-   Use `read_tsv` (\"tab-separated values\"), like `read_csv`.\n-   Data in `ais.txt`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/ais.txt\"\nathletes <- read_tsv(my_url)\n```\n:::\n\n\n\n## The data (some)\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nathletes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 202 x 13\n   Sex    Sport    RCC   WCC    Hc    Hg  Ferr   BMI   SSF `%Bfat`   LBM\n   <chr>  <chr>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl> <dbl>\n 1 female Netba~  4.56  13.3  42.2  13.6    20  19.2  49      11.3  53.1\n 2 female Netba~  4.15   6    38    12.7    59  21.2 110.     25.3  47.1\n 3 female Netba~  4.16   7.6  37.5  12.3    22  21.4  89      19.4  53.4\n 4 female Netba~  4.32   6.4  37.7  12.3    30  21.0  98.3    19.6  48.8\n 5 female Netba~  4.06   5.8  38.7  12.8    78  21.8 122.     23.1  56.0\n 6 female Netba~  4.12   6.1  36.6  11.8    21  21.4  90.4    16.9  56.4\n 7 female Netba~  4.17   5    37.4  12.7   109  21.5 107.     21.3  53.1\n 8 female Netba~  3.8    6.6  36.5  12.4   102  24.4 157.     26.6  54.4\n 9 female Netba~  3.96   5.5  36.3  12.4    71  22.6 101.     17.9  56.0\n10 female Netba~  4.44   9.7  41.4  14.1    64  22.8 126.     25.0  51.6\n# i 192 more rows\n# i 2 more variables: Ht <dbl>, Wt <dbl>\n```\n:::\n:::\n\n\n\n## Types of graph {.smaller}\n\nDepends on number and type of variables:\n\n| Categorical | Quantitative | Graph                                                       |\n|------------:|-------------:|:------------------------------------------------------------|\n|           1 |            0 | bar chart                                                   |\n|           0 |            1 | histogram                                                   |\n|           2 |            0 | grouped bar charts                                          |\n|           1 |            1 | side-by-side boxplots                                       |\n|           0 |            2 | scatterplot                                                 |\n|           2 |            1 | grouped boxplots                                            |\n|           1 |            2 | scatterplot with points identified by group (eg.Â by colour) |\n\nWith more (categorical) variables, might want *separate plots by\ngroups*. This is called `facetting` in R.\n\n## `ggplot`\n\n-   R has a standard graphing procedure ggplot, that we use for all our\n    graphs.\n-   Use in different ways to get precise graph we want.\n-   Let's start with bar chart of the sports played by the athletes.\n\n## Bar chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-4-1.pdf)\n:::\n:::\n\n\n\n## Histogram of body mass index\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = BMI)) + geom_histogram(bins = 10)\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-5-1.pdf)\n:::\n:::\n\n\n\n## Which sports are played by males and females?\n\nGrouped bar chart:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport, fill = Sex)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-6-1.pdf)\n:::\n:::\n\n\n\n## BMI by gender\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sex, y = BMI)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-7-1.pdf)\n:::\n:::\n\n\n\n## Height vs. weight\n\nScatterplot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-8-1.pdf)\n:::\n:::\n\n\n\n## With regression line\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt)) +\n  geom_point() + geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-9-1.pdf)\n:::\n:::\n\n\n\n## BMI by sport and gender\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Sport, y = BMI, colour = Sex)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-10-1.pdf)\n:::\n:::\n\n\n\n## Height and weight by gender\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-11-1.pdf)\n:::\n:::\n\n\n\n## Height by weight by gender for each sport, with facets\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point() + facet_wrap(~Sport)\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-12-1.pdf)\n:::\n:::\n\n\n\n## Filling each facet\n\nDefault uses same scale for each facet. To use different scales for each\nfacet, this:\n\n\\small\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(athletes, aes(x = Ht, y = Wt, colour = Sex)) +\n  geom_point() + facet_wrap(~Sport, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](graphs_files/figure-beamer/graphs-R-13-1.pdf)\n:::\n:::\n\n\n\n\\normalsize\n",
    "supporting": [
      "graphs_files/figure-beamer"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}