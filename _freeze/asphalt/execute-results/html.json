{
  "hash": "25e7e208e7eefbed7de9dbae587937fa",
  "result": {
    "markdown": "---\ntitle: \"Case study: asphalt\"\n---\n\n\n## The asphalt data\n- 31 asphalt pavements prepared under different conditions. How does\nquality of pavement depend on these?\n- Variables:\n  - `pct.a.surf` Percentage of asphalt in surface layer\n  - `pct.a.base` Percentage of asphalt in base layer\n  - `fines` Percentage of fines in surface layer\n  - `voids` Percentage of voids in surface layer\n  - `rut.depth` Change in rut depth per million vehicle passes\n  - `viscosity` Viscosity of asphalt\n  - `run` 2 data collection periods: 1 for run 1, 0 for run 2.\n- `rut.depth` response. Depends on other variables, how?\n\n## Packages for this section\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(leaps)\n```\n:::\n\n\nMake sure to load `MASS` before `tidyverse` (for annoying technical reasons).\n\n## Getting set up \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_url <- \"http://ritsokiguess.site/datafiles/asphalt.txt\"\nasphalt <- read_delim(my_url, \" \")\n```\n:::\n\n\n- Quantitative variables with one response: multiple regression.\n- Some issues here that don’t come up in “simple” regression; handle as\nwe go. (STAB27/STAC67 ideas.)\n\n## The data (some)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"pct.a.surf\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.base\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"fines\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"voids\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"rut.depth\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"viscosity\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"run\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4.68\",\"2\":\"4.87\",\"3\":\"8.4\",\"4\":\"4.916\",\"5\":\"6.75\",\"6\":\"2.80\",\"7\":\"1\"},{\"1\":\"5.19\",\"2\":\"4.50\",\"3\":\"6.5\",\"4\":\"4.563\",\"5\":\"13.00\",\"6\":\"1.40\",\"7\":\"1\"},{\"1\":\"4.82\",\"2\":\"4.73\",\"3\":\"7.9\",\"4\":\"5.321\",\"5\":\"14.75\",\"6\":\"1.40\",\"7\":\"1\"},{\"1\":\"4.85\",\"2\":\"4.76\",\"3\":\"8.3\",\"4\":\"4.865\",\"5\":\"12.60\",\"6\":\"3.30\",\"7\":\"1\"},{\"1\":\"4.86\",\"2\":\"4.95\",\"3\":\"8.4\",\"4\":\"3.776\",\"5\":\"8.25\",\"6\":\"1.70\",\"7\":\"1\"},{\"1\":\"5.16\",\"2\":\"4.45\",\"3\":\"7.4\",\"4\":\"4.397\",\"5\":\"10.67\",\"6\":\"2.90\",\"7\":\"1\"},{\"1\":\"4.82\",\"2\":\"5.05\",\"3\":\"6.8\",\"4\":\"4.867\",\"5\":\"7.28\",\"6\":\"3.70\",\"7\":\"1\"},{\"1\":\"4.86\",\"2\":\"4.70\",\"3\":\"8.6\",\"4\":\"4.828\",\"5\":\"12.67\",\"6\":\"1.70\",\"7\":\"1\"},{\"1\":\"4.78\",\"2\":\"4.84\",\"3\":\"6.7\",\"4\":\"4.865\",\"5\":\"12.58\",\"6\":\"0.92\",\"7\":\"1\"},{\"1\":\"5.16\",\"2\":\"4.76\",\"3\":\"7.7\",\"4\":\"4.034\",\"5\":\"20.60\",\"6\":\"0.68\",\"7\":\"1\"},{\"1\":\"4.57\",\"2\":\"4.82\",\"3\":\"7.4\",\"4\":\"5.450\",\"5\":\"3.58\",\"6\":\"6.00\",\"7\":\"1\"},{\"1\":\"4.61\",\"2\":\"4.65\",\"3\":\"6.7\",\"4\":\"4.853\",\"5\":\"7.00\",\"6\":\"4.30\",\"7\":\"1\"},{\"1\":\"5.07\",\"2\":\"5.10\",\"3\":\"7.5\",\"4\":\"4.257\",\"5\":\"26.20\",\"6\":\"0.60\",\"7\":\"1\"},{\"1\":\"4.66\",\"2\":\"5.09\",\"3\":\"8.2\",\"4\":\"5.144\",\"5\":\"11.67\",\"6\":\"1.80\",\"7\":\"1\"},{\"1\":\"5.42\",\"2\":\"4.41\",\"3\":\"5.8\",\"4\":\"3.718\",\"5\":\"7.67\",\"6\":\"6.00\",\"7\":\"1\"},{\"1\":\"5.01\",\"2\":\"4.74\",\"3\":\"7.1\",\"4\":\"4.715\",\"5\":\"12.25\",\"6\":\"4.40\",\"7\":\"1\"},{\"1\":\"4.97\",\"2\":\"4.66\",\"3\":\"6.5\",\"4\":\"4.625\",\"5\":\"0.76\",\"6\":\"88.00\",\"7\":\"0\"},{\"1\":\"4.01\",\"2\":\"4.72\",\"3\":\"8.0\",\"4\":\"4.977\",\"5\":\"1.35\",\"6\":\"62.00\",\"7\":\"0\"},{\"1\":\"4.96\",\"2\":\"4.90\",\"3\":\"6.8\",\"4\":\"4.322\",\"5\":\"1.44\",\"6\":\"50.00\",\"7\":\"0\"},{\"1\":\"5.20\",\"2\":\"4.70\",\"3\":\"8.2\",\"4\":\"5.087\",\"5\":\"1.60\",\"6\":\"58.00\",\"7\":\"0\"},{\"1\":\"4.80\",\"2\":\"4.60\",\"3\":\"6.6\",\"4\":\"5.971\",\"5\":\"1.10\",\"6\":\"90.00\",\"7\":\"0\"},{\"1\":\"4.98\",\"2\":\"4.69\",\"3\":\"6.4\",\"4\":\"4.647\",\"5\":\"0.85\",\"6\":\"66.00\",\"7\":\"0\"},{\"1\":\"5.35\",\"2\":\"4.76\",\"3\":\"7.3\",\"4\":\"5.115\",\"5\":\"1.20\",\"6\":\"140.00\",\"7\":\"0\"},{\"1\":\"5.04\",\"2\":\"4.80\",\"3\":\"7.8\",\"4\":\"5.939\",\"5\":\"0.56\",\"6\":\"240.00\",\"7\":\"0\"},{\"1\":\"4.80\",\"2\":\"4.80\",\"3\":\"7.4\",\"4\":\"5.916\",\"5\":\"0.72\",\"6\":\"420.00\",\"7\":\"0\"},{\"1\":\"4.83\",\"2\":\"4.60\",\"3\":\"6.7\",\"4\":\"5.471\",\"5\":\"0.47\",\"6\":\"500.00\",\"7\":\"0\"},{\"1\":\"4.66\",\"2\":\"4.72\",\"3\":\"7.2\",\"4\":\"4.602\",\"5\":\"0.33\",\"6\":\"180.00\",\"7\":\"0\"},{\"1\":\"4.67\",\"2\":\"4.50\",\"3\":\"6.3\",\"4\":\"5.043\",\"5\":\"0.26\",\"6\":\"270.00\",\"7\":\"0\"},{\"1\":\"4.72\",\"2\":\"4.70\",\"3\":\"6.8\",\"4\":\"5.075\",\"5\":\"0.76\",\"6\":\"170.00\",\"7\":\"0\"},{\"1\":\"5.00\",\"2\":\"5.07\",\"3\":\"7.2\",\"4\":\"4.334\",\"5\":\"0.80\",\"6\":\"98.00\",\"7\":\"0\"},{\"1\":\"4.70\",\"2\":\"4.80\",\"3\":\"7.7\",\"4\":\"5.705\",\"5\":\"2.00\",\"6\":\"35.00\",\"7\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Plotting response “rut depth” against everything else\n\nSame idea as for plotting separate predictions on one plot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt %>%\n  pivot_longer(\n    -rut.depth,\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(x = x, y = rut.depth)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g\n```\n:::\n\n\n“collect all the x-variables together into one column called x, with another\ncolumn xname saying which x they were, then plot these x’s against\nrut.depth, a separate facet for each x-variable.”\n\nI saved this graph to plot later (on the next page).\n\n## The plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-5-1.png){width=960}\n:::\n:::\n\n\n## Interpreting the plots\n- One plot of rut depth against each of the six other variables.\n- Get rough idea of what’s going on.\n- Trends mostly weak.\n- `viscosity` has strong but non-linear trend.\n- `run` has effect but variability bigger when run is 1.\n- Weak but downward trend for `voids`.\n- Non-linearity of `rut.depth`-`viscosity` relationship should concern\nus.\n\n## Log of `viscosity`: more nearly linear?\n\n- Take this back to asphalt engineer: suggests log of `viscosity`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(asphalt, aes(y = rut.depth, x = log(viscosity))) +\n  geom_point() + geom_smooth(se = F)\n```\n:::\n\n\n(plot overleaf)\n\n## Rut depth against log-viscosity\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-6-1.png){width=960}\n:::\n:::\n\n\n## Comments and next steps\n- Not very linear, but better than before.\n- In multiple regression, hard to guess which x’s affect response. So\ntypically start by predicting from everything else.\n- Model formula has response on left, squiggle, explanatories on right\njoined by plusses:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1 <- lm(rut.depth ~ pct.a.surf + pct.a.base + fines +\n  voids + log(viscosity) + run, data = asphalt)\n```\n:::\n\n\n## Regression output: `summary(rut.1)` or:\n\n\\footnotesize\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(rut.1)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"r.squared\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"adj.r.squared\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sigma\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"df\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"logLik\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"AIC\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"BIC\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"deviance\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"df.residual\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"nobs\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.8060035\",\"2\":\"0.7575043\",\"3\":\"3.323526\",\"4\":\"16.61893\",\"5\":\"1.743011e-07\",\"6\":\"6\",\"7\":\"-77.25194\",\"8\":\"170.5039\",\"9\":\"181.9758\",\"10\":\"265.0998\",\"11\":\"24\",\"12\":\"31\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ntidy(rut.1)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-12.9936763\",\"3\":\"26.2187822\",\"4\":\"-0.4955866\",\"5\":\"0.624693721\"},{\"1\":\"pct.a.surf\",\"2\":\"3.9705671\",\"3\":\"2.4966454\",\"4\":\"1.5903608\",\"5\":\"0.124841156\"},{\"1\":\"pct.a.base\",\"2\":\"1.2631409\",\"3\":\"3.9702906\",\"4\":\"0.3181482\",\"5\":\"0.753124397\"},{\"1\":\"fines\",\"2\":\"0.1164434\",\"3\":\"1.0123885\",\"4\":\"0.1150185\",\"5\":\"0.909387340\"},{\"1\":\"voids\",\"2\":\"0.5892602\",\"3\":\"1.3243933\",\"4\":\"0.4449284\",\"5\":\"0.660358431\"},{\"1\":\"log(viscosity)\",\"2\":\"-3.1515128\",\"3\":\"0.9194468\",\"4\":\"-3.4276183\",\"5\":\"0.002202725\"},{\"1\":\"run\",\"2\":\"-1.9654795\",\"3\":\"3.6472048\",\"4\":\"-0.5389002\",\"5\":\"0.594919790\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\\normalsize\n\n## Comments\n- R-squared 81%, not so bad. \n- P-value in `glance` asserts that something helping to predict\nrut.depth.\n- Table of coefficients says `log(viscosity)`.\n- But confused by clearly non-significant variables: remove those to get\nclearer picture of what is helpful.\n- Before we do anything, look at residual plots:\n  - (a) of residuals against fitted values (as usual)\n  - (b) of residuals against each explanatory.\n- Problem fixes:\n  - with (a): fix response variable; \n  - with some plots in (b): fix those explanatory variables.\n\n## Plot fitted values against residuals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rut.1, aes(x = .fitted, y = .resid)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-9-1.png){width=960}\n:::\n:::\n\n\n## Plotting residuals against $x$ variables\n- Problem here is that residuals are in the fitted model, and the\nobserved $x$-values are in the original data frame `asphalt`. \n- Package broom contains a function `augment` that combines these two\ntogether so that they can later be plotted: start with a model first, and then augment with a\ndata frame:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1 %>% augment(asphalt) -> rut.1a\n```\n:::\n\n\n\n## What does rut.1a contain?\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(rut.1a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"pct.a.surf\" \"pct.a.base\" \"fines\"      \"voids\"      \"rut.depth\" \n [6] \"viscosity\"  \"run\"        \".fitted\"    \".resid\"     \".hat\"      \n[11] \".sigma\"     \".cooksd\"    \".std.resid\"\n```\n:::\n:::\n\n\n- all the stuff in original data frame, plus:\n- quantities from regression (starting with a dot)\n\n\n## Plotting residuals against $x$-variables \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.1a %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(x = x, y = .resid)) +\n  geom_point() + facet_wrap(~xname, scales = \"free\") -> g\n```\n:::\n\n\n## The plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-14-1.png){width=960}\n:::\n:::\n\n\n## Comments\n- There is serious curve in plot of residuals vs. fitted values. Suggests a\ntransformation of $y$. \n- The residuals-vs-$x$’s  plots don’t show any serious trends. Worst\nprobably that potential curve against log-viscosity.\n- Also, large positive residual, 10, that shows up on all plots. Perhaps\ntransformation of $y$ will help with this too.\n- If residual-fitted plot OK, but some residual-$x$ plots not, try\ntransforming those $x$’s, eg. by adding $x^2$ to help with curve.\n\n## Which transformation?\n- Best way: consult with person who brought you the data.\n- Can’t do that here!\n- No idea what transformation would be good.\n- Let data choose: “Box-Cox transformation”.\n- Scale is that of “ladder of powers”: power transformation, but 0 is\nlog.\n\n\n## Running Box-Cox\n\nFrom package `MASS`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxcox(rut.depth ~ pct.a.surf + pct.a.base + fines + voids +\n  log(viscosity) + run, data = asphalt)\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-15-1.png){width=960}\n:::\n:::\n\n\n## Comments on Box-Cox plot\n- $\\lambda$ represents power to transform $y$ with.\n- Best single choice of transformation parameter $\\lambda$ is peak of curve,\nclose to 0.\n- Vertical dotted lines give CI for $\\lambda$, about (−0.05, 0.2).\n- $\\lambda = 0$ means “log”.\n- Narrowness of confidence interval mean that these not supported by\ndata:\n  - No transformation ($\\lambda = 1$)\n  - Square root ($\\lambda = 0.5$)\n  - Reciprocal ($\\lambda = −1$).\n\n## Relationships with explanatories\n- As before: plot response (now `log(rut.depth)`) against other\nexplanatory variables, all in one shot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nasphalt %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\"\n  ) %>%\n  ggplot(aes(y = log(rut.depth), x = x)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g3\n```\n:::\n\n\n## The new plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng3\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-17-1.png){width=960}\n:::\n:::\n\n\n## Modelling with transformed response\n- These trends look pretty straight, especially with `log.viscosity`.\n- Values of `log.rut.depth` for each `run` have same spread.\n- Other trends weak, but are straight if they exist.\n- Start modelling from the beginning again.\n- Model `log.rut.depth` in terms of everything else, see what can be\nremoved:\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.2 <- lm(log(rut.depth) ~ pct.a.surf + pct.a.base +\n  fines + voids + log(viscosity) + run, data = asphalt)\n```\n:::\n\n\n- use `tidy` from `broom` to display just the coefficients.\n\n## Output\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Taking out everything non-significant\n- Try: remove everything but pct.a.surf and log.viscosity:\n\n\\footnotesize\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.3 <- lm(log(rut.depth) ~ pct.a.surf + log(viscosity), data = asphalt)\n```\n:::\n\n\\normalsize\n\n\\footnotesize\n- Check that removing all those variables wasn’t too much:\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(rut.3, rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Res.Df\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"RSS\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Df\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sum of Sq\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"F\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"28\",\"2\":\"2.880919\",\"3\":\"NA\",\"4\":\"NA\",\"5\":\"NA\",\"6\":\"NA\",\"_rn_\":\"1\"},{\"1\":\"24\",\"2\":\"2.288764\",\"3\":\"4\",\"4\":\"0.5921551\",\"5\":\"1.552336\",\"6\":\"0.2191461\",\"_rn_\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\\normalsize\n\n- $H_0$ : two models equally good; $H_a$ : bigger model better.\n- Null not rejected here; small model as good as the big one, so prefer\nsimpler smaller model `rut.3`.\n\n## Find the largest P-value by eye:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n- Largest P-value is 0.78 for `pct.a.base`, not significant.\n- So remove this first, re-fit and re-assess.\n- Or, as over.\n\n## Get the computer to find the largest P-value for you\n\n- Output from `tidy` is itself a data frame, thus:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.2) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.55768728\",\"3\":\"0.08543236\",\"4\":\"-6.5278223\",\"5\":\"9.445184e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"0.58357559\",\"3\":\"0.23198113\",\"4\":\"2.5156167\",\"5\":\"1.898184e-02\"},{\"1\":\"voids\",\"2\":\"0.19885377\",\"3\":\"0.12305882\",\"4\":\"1.6159245\",\"5\":\"1.191815e-01\"},{\"1\":\"fines\",\"2\":\"0.09775203\",\"3\":\"0.09406823\",\"4\":\"1.0391609\",\"5\":\"3.090864e-01\"},{\"1\":\"run\",\"2\":\"0.34004833\",\"3\":\"0.33888780\",\"4\":\"1.0034245\",\"5\":\"3.256663e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-1.57298922\",\"3\":\"2.43617401\",\"4\":\"-0.6456802\",\"5\":\"5.246124e-01\"},{\"1\":\"pct.a.base\",\"2\":\"-0.10336733\",\"3\":\"0.36890801\",\"4\":\"-0.2801981\",\"5\":\"7.817265e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n- Largest P-value at the bottom.\n\n## Take out `pct.a.base`\n\n- Copy and paste the `lm` code and remove what you're removing:\n\n\\small\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.4 <- lm(log(rut.depth) ~ pct.a.surf + fines + voids + \n              log(viscosity) + run, data = asphalt)\ntidy(rut.4) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.55249041\",\"3\":\"0.08184342\",\"4\":\"-6.750578\",\"5\":\"4.483621e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"0.59299473\",\"3\":\"0.22526263\",\"4\":\"2.632459\",\"5\":\"1.432182e-02\"},{\"1\":\"voids\",\"2\":\"0.20046739\",\"3\":\"0.12063727\",\"4\":\"1.661737\",\"5\":\"1.090561e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-2.07849871\",\"3\":\"1.60665073\",\"4\":\"-1.293684\",\"5\":\"2.075999e-01\"},{\"1\":\"run\",\"2\":\"0.35977353\",\"3\":\"0.32532859\",\"4\":\"1.105877\",\"5\":\"2.793085e-01\"},{\"1\":\"fines\",\"2\":\"0.08894579\",\"3\":\"0.08701332\",\"4\":\"1.022209\",\"5\":\"3.164725e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\\normalsize\n\n- `fines` is next to go, P-value 0.32.\n\n## “Update”\n\nAnother way to do the same thing:\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.4 <- update(rut.2, . ~ . - pct.a.base)\ntidy(rut.4) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.55249041\",\"3\":\"0.08184342\",\"4\":\"-6.750578\",\"5\":\"4.483621e-07\"},{\"1\":\"pct.a.surf\",\"2\":\"0.59299473\",\"3\":\"0.22526263\",\"4\":\"2.632459\",\"5\":\"1.432182e-02\"},{\"1\":\"voids\",\"2\":\"0.20046739\",\"3\":\"0.12063727\",\"4\":\"1.661737\",\"5\":\"1.090561e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-2.07849871\",\"3\":\"1.60665073\",\"4\":\"-1.293684\",\"5\":\"2.075999e-01\"},{\"1\":\"run\",\"2\":\"0.35977353\",\"3\":\"0.32532859\",\"4\":\"1.105877\",\"5\":\"2.793085e-01\"},{\"1\":\"fines\",\"2\":\"0.08894579\",\"3\":\"0.08701332\",\"4\":\"1.022209\",\"5\":\"3.164725e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n- Again, `fines` is the one to go. (Output identical as it should be.)\n\n## Take out fines:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.5 <- update(rut.4, . ~ . - fines)\ntidy(rut.5) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.5803887\",\"3\":\"0.07722544\",\"4\":\"-7.5155118\",\"5\":\"5.591602e-08\"},{\"1\":\"pct.a.surf\",\"2\":\"0.5483723\",\"3\":\"0.22118326\",\"4\":\"2.4792668\",\"5\":\"1.997130e-02\"},{\"1\":\"voids\",\"2\":\"0.2318797\",\"3\":\"0.11675845\",\"4\":\"1.9859780\",\"5\":\"5.767397e-02\"},{\"1\":\"run\",\"2\":\"0.2946793\",\"3\":\"0.31931076\",\"4\":\"0.9228604\",\"5\":\"3.645654e-01\"},{\"1\":\"(Intercept)\",\"2\":\"-1.2553309\",\"3\":\"1.39146826\",\"4\":\"-0.9021628\",\"5\":\"3.752525e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nCan’t take out intercept, so `run`, with P-value 0.36, goes next.\n\n## Take out run:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrut.6 <- update(rut.5, . ~ . - run)\ntidy(rut.6) %>% arrange(p.value)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"log(viscosity)\",\"2\":\"-0.6464911\",\"3\":\"0.02878643\",\"4\":\"-22.4581853\",\"5\":\"5.288267e-19\"},{\"1\":\"pct.a.surf\",\"2\":\"0.5554686\",\"3\":\"0.22044153\",\"4\":\"2.5198000\",\"5\":\"1.796333e-02\"},{\"1\":\"voids\",\"2\":\"0.2447934\",\"3\":\"0.11559805\",\"4\":\"2.1176259\",\"5\":\"4.356036e-02\"},{\"1\":\"(Intercept)\",\"2\":\"-1.0207945\",\"3\":\"1.36430001\",\"4\":\"-0.7482185\",\"5\":\"4.607966e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nAgain, can’t take out intercept, so largest P-value is for `voids`, 0.044. But\nthis is significant, so we shouldn’t remove `voids`.\n\n## Comments\n- Here we stop: `pct.a.surf`, `voids` and `log.viscosity` would all\nmake fit significantly worse if removed. So they stay.\n- Different final result from taking things out one at a time (top), than\nby taking out 4 at once (bottom):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(rut.6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   (Intercept)     pct.a.surf          voids log(viscosity) \n    -1.0207945      0.5554686      0.2447934     -0.6464911 \n```\n:::\n\n```{.r .cell-code}\ncoef(rut.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   (Intercept)     pct.a.surf log(viscosity) \n     0.9001389      0.3911481     -0.6185628 \n```\n:::\n:::\n\n\n- Point: Can make difference which way we go.\n\n## Comments on variable selection\n- Best way to decide which $x$’s belong: expert knowledge: which of\nthem should be important.\n- Best automatic method: what we did, “backward selection”.\n- Do not learn about “stepwise regression”! [**eg. here**](https://towardsdatascience.com/stopping-stepwise-why-stepwise-selection-is-bad-and-what-you-should-use-instead-90818b3f52df)\n- R has function `step` that does backward selection, like this:\n\n::: {.cell}\n\n```{.r .cell-code}\nstep(rut.2, direction = \"backward\", test = \"F\")\n```\n:::\n\n\nGets same answer as we did (by removing least significant x). \n\n- Removing non-significant $x$’s may remove interesting ones whose\nP-values happened not to reach 0.05. Consider using less stringent\ncutoff like 0.20 or even bigger.\n- Can also fit all possible regressions, as over (may need to do\n`install.packages(\"leaps\")` first).\n\n## All possible regressions (output over)\n\nUses package `leaps`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaps <- regsubsets(log(rut.depth) ~ pct.a.surf + \n                      pct.a.base + fines + voids + \n                      log(viscosity) + run, \n                    data = asphalt, nbest = 2)\ns <- summary(leaps)\nwith(s, data.frame(rsq, outmat)) -> d\n```\n:::\n\n\n## The output\n\n\n::: {.cell}\n\n:::\n\n\n\n\\scriptsize\n\n::: {.cell}\n\n```{.r .cell-code}\nd %>% rownames_to_column(\"model\") %>% arrange(desc(rsq))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"rsq\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.surf\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"pct.a.base\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fines\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"voids\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"log.viscosity.\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"run\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6  ( 1 )\",\"2\":\"0.9609642\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 1 )\",\"2\":\"0.9608365\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 2 )\",\"2\":\"0.9593265\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"4  ( 1 )\",\"2\":\"0.9591996\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 2 )\",\"2\":\"0.9589206\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 1 )\",\"2\":\"0.9578631\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 2 )\",\"2\":\"0.9534561\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 1 )\",\"2\":\"0.9508647\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 2 )\",\"2\":\"0.9479541\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 1 )\",\"2\":\"0.9452562\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 2 )\",\"2\":\"0.8624107\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"*\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\\normalsize\n\n\n::: {.cell}\n\n:::\n\n\n\n## Comments\n- Problem: even adding a worthless x increases R-squared. So try for\nline where R-squared stops increasing “too much”, eg. top line (just\nlog.viscosity), first 3-variable line (backwards-elimination model).\nHard to judge.\n- One solution (STAC67): adjusted R-squared, where adding worthless\nvariable makes it go down.\n- `data.frame` rather than `tibble` because there are several columns in\n`outmat`. \n\n## All possible regressions, adjusted R-squared\n\n\n::: {.cell}\n\n:::\n\n\n\\scriptsize\n\n::: {.cell}\n\n```{.r .cell-code}\nwith(s, data.frame(adjr2, outmat)) %>% \n  rownames_to_column(\"model\") %>% \n  arrange(desc(adjr2))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"adjr2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pct.a.surf\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"pct.a.base\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"fines\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"voids\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"log.viscosity.\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"run\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"3  ( 1 )\",\"2\":\"0.9531812\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"5  ( 1 )\",\"2\":\"0.9530038\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 1 )\",\"2\":\"0.9529226\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"4  ( 2 )\",\"2\":\"0.9526007\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"6  ( 1 )\",\"2\":\"0.9512052\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"*\"},{\"1\":\"5  ( 2 )\",\"2\":\"0.9511918\",\"3\":\"*\",\"4\":\"*\",\"5\":\"*\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"3  ( 2 )\",\"2\":\"0.9482845\",\"3\":\"*\",\"4\":\"\",\"5\":\"*\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 1 )\",\"2\":\"0.9473550\",\"3\":\"*\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"2  ( 2 )\",\"2\":\"0.9442365\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"*\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 1 )\",\"2\":\"0.9433685\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"*\",\"8\":\"\"},{\"1\":\"1  ( 2 )\",\"2\":\"0.8576662\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"*\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\\normalsize\n\n\n\n::: {.cell}\n\n:::\n\n\n## Revisiting the best model\n- Best model was our rut.6:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(rut.6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"(Intercept)\",\"2\":\"-1.0207945\",\"3\":\"1.36430001\",\"4\":\"-0.7482185\",\"5\":\"4.607966e-01\"},{\"1\":\"pct.a.surf\",\"2\":\"0.5554686\",\"3\":\"0.22044153\",\"4\":\"2.5198000\",\"5\":\"1.796333e-02\"},{\"1\":\"voids\",\"2\":\"0.2447934\",\"3\":\"0.11559805\",\"4\":\"2.1176259\",\"5\":\"4.356036e-02\"},{\"1\":\"log(viscosity)\",\"2\":\"-0.6464911\",\"3\":\"0.02878643\",\"4\":\"-22.4581853\",\"5\":\"5.288267e-19\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Revisiting (2)\n- Regression slopes say that rut depth increases as log-viscosity\ndecreases, `pct.a.surf` increases and `voids` increases. This more or\nless checks out with out scatterplots against `log.viscosity`. \n- We should check residual plots again, though previous scatterplots say\nit’s unlikely that there will be a problem:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(rut.6, aes(y = .resid, x = .fitted)) + \ngeom_point()\n```\n:::\n\n\n## Residuals against fitted values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-39-1.png){width=960}\n:::\n:::\n\n\n## Plotting residuals against x’s\n- Do our trick again to put them all on one plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(rut.6, asphalt) %>%\n  mutate(log_vis=log(viscosity)) %>% \n  pivot_longer(\n    c(pct.a.surf:voids, run, log_vis),\n    names_to=\"xname\", values_to=\"x\",\n  ) %>%\n  ggplot(aes(y = .resid, x = x)) + geom_point() +\n  facet_wrap(~xname, scales = \"free\") -> g2\n```\n:::\n\n\n## Residuals against the x’s\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2\n```\n\n::: {.cell-output-display}\n![](asphalt_files/figure-revealjs/asphalt-41-1.png){width=960}\n:::\n:::\n\n\n## Comments\n- None of the plots show any sort of pattern. The points all look\nrandom on each plot.\n- On the plot of fitted values (and on the one of log.viscosity), the\npoints seem to form a “left half” and a “right half” with a gap in the\nmiddle. This is not a concern.\n- One of the pct.a.surf values is low outlier (4), shows up top left of\nthat plot.\n- Only two possible values of run; the points in each group look\nrandomly scattered around 0, with equal spreads.\n- Residuals seem to go above zero further than below, suggesting a\nmild non-normality, but not enough to be a problem.\n\n## Variable-selection strategies\n- Expert knowledge.\n- Backward elimination.\n- All possible regressions.\n- Taking a variety of models to experts and asking their opinion.\n- Use a looser cutoff to eliminate variables in backward elimination (eg.\nonly if P-value greater than 0.20).\n- If goal is prediction, eliminating worthless variables less important.\n- If goal is understanding, want to eliminate worthless variables where\npossible.\n- Results of variable selection not always reproducible, so caution\nadvised.\n\n",
    "supporting": [
      "asphalt_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"asphalt_files/libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"asphalt_files/libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}